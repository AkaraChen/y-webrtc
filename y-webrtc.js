"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var WebRTC=function(e){function t(o,n){if(_classCallCheck(this,t),void 0===n)throw new Error("Options must not be undefined!");if(null==n.room)throw new Error("You must define a room name!");n.role="slave",e.call(this,o,n),this.webrtcOptions={url:n.url||"https://yatta.ninja:8888",room:n.room};var r=new SimpleWebRTC(this.webrtcOptions);this.swr=r;var i=this;r.once("connectionReady",function(e){r.joinRoom(i.webrtcOptions.room),r.once("joinedRoom",function(){i.setUserId(e),r.on("channelMessage",function(e,t,o){null!=o.type&&i.receiveMessage(e.id,o.payload)})}),r.on("createdPeer",function(e){i.userJoined(e.id,"master")}),r.on("peerStreamRemoved",function(e){i.userLeft(e.id)})})}return _inherits(t,e),t.prototype.disconnect=function(){this.swr.leaveRoom(),e.prototype.disconnect.call(this)},t.prototype.reconnect=function(){this.swr.joinRoom(this.webrtcOptions.room),e.prototype.reconnect.call(this)},t.prototype.send=function o(e,t){var n=this,o=function r(){var o,i=n.swr.webrtc.getPeers(e)[0];i&&(o=i.sendDirectly("simplewebrtc","yjs",t)),o||setTimeout(r,500)};o()},t.prototype.broadcast=function(e){this.swr.sendDirectlyToAll("simplewebrtc","yjs",e)},t.prototype.isDisconnected=function(){return!1},t}(Y.AbstractConnector);Y.WebRTC=WebRTC;
//# sourceMappingURL=y-webrtc.js.map
